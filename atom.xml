<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>杨文昊的个人博客</title>
  
  <subtitle>愿你出走半生，归来仍是少年。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-24T11:22:09.794Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Alpha Yang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>图像基本操作</title>
    <link href="http://yoursite.com/2020/03/24/%E5%9B%BE%E5%83%8F%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2020/03/24/%E5%9B%BE%E5%83%8F%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</id>
    <published>2020-03-24T15:16:32.000Z</published>
    <updated>2020-03-24T11:22:09.794Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、笔记整理"><a href="#一、笔记整理" class="headerlink" title="一、笔记整理"></a>一、笔记整理</h3><p>通过b站以及github的学习完成了本教程，讲解了图像处理的底层知识，本教程所有python代码将会放在我的github仓库上面，通过首页即可访问。欢迎大家通过github来学习，当然想提高学习效率，提前了解git，ssh以及其基本命令是必须的，之后我也会推荐关于计算机视觉以及深度学习的项目。</p><h3 id="二、图像的本质"><a href="#二、图像的本质" class="headerlink" title="二、图像的本质"></a>二、图像的本质</h3><p>在学习之前我们需要思考一个问题，在计算机的眼中，图像到底是什么东西。</p><p><img src="https://i.loli.net/2020/03/24/hCJsYW86rzHkeN7.png" alt=""></p><p>我们用所有cv教程中最经典的名画来举例，计算机将图像分割了成了无数小方格，这些小方格分别有自己对应的数字矩阵，而这些数字矩阵便是计算机解读和提取图像的信息。这些数字其实便是我们常说的RGB像素，这个概念并不难理解，其实在我们眼中图片是可视化的，而在计算机眼中，所有一切可视化的图片以及视屏都是矩阵。</p><p>这也是为何传统领域的图像处理属于信号与信息处理领域，本质上任何预处理的都是数字。</p><p>明白了这个概念，下面我们可以用简单的几个命令，来将图像的数字信息给提取出来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">img=cv2.imread(<span class="string">'image\lena.jpg'</span>)  <span class="comment"># 读取图片的RGB参数</span></span><br><span class="line">size=img.shape <span class="comment"># 获取矩阵的维度</span></span><br></pre></td></tr></table></figure><p>通过这样的命令，我们便可以得到一个$266\times 266 \times 3$的矩阵了，说明计算机将lena的图像分成了266*266的像素小方格，每个方格有三个参数，这三个参数分别代表B，G，R(这里注意不是RGB)。</p><p><img src="https://i.loli.net/2020/03/24/zlZnW9v5yqg4VXj.png" alt=""></p><p>下面还有一个问题，如果只告诉计算机一张图片的像素参数，计算机能否将它画出来。这当然也是很轻松的。</p><p>比如我们提取了lena图片中的img参数，用一个万不变的函数便能解决。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cv_show</span><span class="params">(name,img)</span>:</span></span><br><span class="line">    cv2.imshow(name,img)  <span class="comment"># 显示图片，可以多个窗口</span></span><br><span class="line">    cv2.waitKey(<span class="number">0</span>) <span class="comment"># 窗口停止时间，毫秒级，0表示任意键结束</span></span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line">cv_show(<span class="string">'image'</span>,img)</span><br></pre></td></tr></table></figure><p>上述代码非常简单，我就不仔细说明了。下面我们来思考下，如果一张彩色的图片，我们能否提取他灰度的参数，即灰度处理，将其变成灰度图像。只需要记下下面cv2的命令即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">img=cv2.imread(<span class="string">'image\lena.jpg'</span>,cv2.IMREAD_GRAYSCALE) <span class="comment"># 灰度处理：读取灰度参数</span></span><br><span class="line">cv_show(<span class="string">'lena_gray'</span>,img)</span><br><span class="line">cv2.imwrite(<span class="string">'image\lena_gray.png'</span>,img) <span class="comment"># 保存图片</span></span><br></pre></td></tr></table></figure><p>并保存图片，我们得到了新的lena图片。</p><p><img src="https://i.loli.net/2020/03/24/JcZB8r4HSlyDdiT.png" alt=""></p><h3 id="三、处理视屏"><a href="#三、处理视屏" class="headerlink" title="三、处理视屏"></a>三、处理视屏</h3><h4 id="1-图像与视屏的关系"><a href="#1-图像与视屏的关系" class="headerlink" title="1. 图像与视屏的关系"></a>1. 图像与视屏的关系</h4><p>下面我们来研究如何处理视屏的图像，其实两者完全一样，视屏有帧数的概念，我们把一帧看做一个图像，那这样理解就轻松很多了，我们只需要一帧一帧地分离视屏，并用图像的处理知识就可以啦。</p><h4 id="2-几个基础的图像或视屏处理命令"><a href="#2-几个基础的图像或视屏处理命令" class="headerlink" title="2.几个基础的图像或视屏处理命令"></a>2.几个基础的图像或视屏处理命令</h4><div class="table-container"><table><thead><tr><th style="text-align:center">函数</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">cv2.VideoCapture(‘video.mp4’,(0))</td><td style="text-align:center">捕捉摄像头，后面的0代表默认，可有可无</td></tr><tr><td style="text-align:center">read()</td><td style="text-align:center">检查是否能打开视屏以及读取的图像内容</td></tr><tr><td style="text-align:center">cv2.cvtColor()</td><td style="text-align:center">转换颜色</td></tr><tr><td style="text-align:center">cv2.imshow()</td><td style="text-align:center">展示图像或视屏</td></tr><tr><td style="text-align:center">cv2.waitkeys()</td><td style="text-align:center">等待的时间或视屏图像展示时间</td></tr></tbody></table></div><h4 id="3-视屏基本操作"><a href="#3-视屏基本操作" class="headerlink" title="3.视屏基本操作"></a>3.视屏基本操作</h4><p>下面我们对视屏进行一些基本操作，包括提取视屏，检查是否能打开，将彩色视屏转换为灰色视屏，快进视屏。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 处理视屏</span></span><br><span class="line">video=cv2.VideoCapture(<span class="string">'image/test.mp4'</span>) <span class="comment"># 捕捉摄像头，用数字来控制不同的设备，例如外接通常为400</span></span><br><span class="line"><span class="comment"># 检查是否正确打开</span></span><br><span class="line"><span class="keyword">if</span> video.isOpened():</span><br><span class="line">    open, frame = video.read()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    open=<span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> open:</span><br><span class="line">    ret, frame=video.read()</span><br><span class="line">    <span class="keyword">if</span> frame <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> ret==<span class="literal">True</span>:</span><br><span class="line">        gray=cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)   <span class="comment"># 转换视屏颜色</span></span><br><span class="line">        cv2.imshow(<span class="string">'result'</span>,gray)</span><br><span class="line">        <span class="keyword">if</span> cv2.waitKey(<span class="number">10</span>) &amp; <span class="number">0xFF</span>==<span class="number">27</span>:  <span class="comment"># waitkey代表视屏播放时间，0xFF==27相当于键盘上的Esc键退出</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">video.release()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><h4 id="四、图像基本操作"><a href="#四、图像基本操作" class="headerlink" title="四、图像基本操作"></a>四、图像基本操作</h4><h4 id="1-截取部分图像"><a href="#1-截取部分图像" class="headerlink" title="1.截取部分图像"></a>1.截取部分图像</h4><p>手机上处理照片有一个我们非常常用的功能，叫”裁剪”。同样，计算机上也有。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 截取部分图像数据</span></span><br><span class="line">img=cv2.imread(<span class="string">'image\lena.jpg'</span>)</span><br><span class="line">lena_new=img[<span class="number">0</span>:<span class="number">200</span>,<span class="number">0</span>:<span class="number">200</span>]</span><br><span class="line">cv_show(<span class="string">'lena_new'</span>,lena_new)</span><br><span class="line">cv2.imwrite(<span class="string">'image\lena_new.png'</span>,lena_new) <span class="comment"># 保存图片</span></span><br></pre></td></tr></table></figure><p>通过简单地规定矩阵的范围，我们可以得到裁剪后的图像。</p><p><img src="https://i.loli.net/2020/03/24/mgq8xSG6CedLTUZ.png" alt=""></p><h4 id="2-颜色通道提取"><a href="#2-颜色通道提取" class="headerlink" title="2.颜色通道提取"></a>2.颜色通道提取</h4><p>对于图像的颜色而言，我们之前说了如何将彩色图像转换为灰色图像，其实其他颜色也可以相互转化，我们通过对图像颜色的提取，修改b，g，r这三个在0~255之间的参数，便可以随意更改图像的颜色了。比如这里面，我只保留lena图像中的r参数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 颜色通道提取</span></span><br><span class="line">b,g,r=cv2.split(img)</span><br><span class="line"><span class="comment"># 只保留R</span></span><br><span class="line">cur_img=img.copy()</span><br><span class="line">cur_img[:,:,<span class="number">0</span>]=<span class="number">0</span></span><br><span class="line">cur_img[:,:,<span class="number">1</span>]=<span class="number">0</span></span><br><span class="line">cv_show(<span class="string">'R'</span>,cur_img)</span><br><span class="line">cv2.imwrite(<span class="string">'image\lena_R.png'</span>,cur_img) <span class="comment"># 保存图片</span></span><br></pre></td></tr></table></figure><p>我们成功地得到了一张红色的lena照片。对色域感兴趣的小伙伴，可以直接google所有的RGB值。</p><p><img src="https://i.loli.net/2020/03/24/NuSbmdzq9pYBCw5.png" alt=""></p><h4 id="3-边界填充"><a href="#3-边界填充" class="headerlink" title="3.边界填充"></a>3.边界填充</h4><p>除了裁剪图像，有的时候我们还需要拓宽图像的边界，而边界的地方有许多种填充方式，在这里我为大家介绍其中的常用的6种。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 边界填充</span></span><br><span class="line">top_size,bottom_size,left_size,right_size = (<span class="number">50</span>,<span class="number">50</span>,<span class="number">50</span>,<span class="number">50</span>) <span class="comment"># 表示拓充上下左右的宽度</span></span><br><span class="line">replicate = cv2.copyMakeBorder(img, top_size, bottom_size, left_size, right_size, borderType=cv2.BORDER_REPLICATE)</span><br><span class="line">reflect = cv2.copyMakeBorder(img, top_size, bottom_size, left_size, right_size,cv2.BORDER_REFLECT)</span><br><span class="line">reflect101 = cv2.copyMakeBorder(img, top_size, bottom_size, left_size, right_size, cv2.BORDER_REFLECT_101)</span><br><span class="line">wrap = cv2.copyMakeBorder(img, top_size, bottom_size, left_size, right_size, cv2.BORDER_WRAP)</span><br><span class="line">constant = cv2.copyMakeBorder(img, top_size, bottom_size, left_size, right_size,cv2.BORDER_CONSTANT, value=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">231</span>), plt.imshow(img, <span class="string">'gray'</span>), plt.title(<span class="string">'ORIGINAL'</span>)</span><br><span class="line">plt.subplot(<span class="number">232</span>), plt.imshow(replicate, <span class="string">'gray'</span>), plt.title(<span class="string">'REPLICATE'</span>)</span><br><span class="line">plt.subplot(<span class="number">233</span>), plt.imshow(reflect, <span class="string">'gray'</span>), plt.title(<span class="string">'REFLECT'</span>)</span><br><span class="line">plt.subplot(<span class="number">234</span>), plt.imshow(reflect101, <span class="string">'gray'</span>), plt.title(<span class="string">'REFLECT_101'</span>)</span><br><span class="line">plt.subplot(<span class="number">235</span>), plt.imshow(wrap, <span class="string">'gray'</span>), plt.title(<span class="string">'WRAP'</span>)</span><br><span class="line">plt.subplot(<span class="number">236</span>), plt.imshow(constant, <span class="string">'gray'</span>), plt.title(<span class="string">'CONSTANT'</span>)</span><br><span class="line">plt.savefig(<span class="string">'image/image_filling.png'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>这些复杂的代码我觉得并不需要非常深刻地理解，当然如果感兴趣你也可以去看看python底层的库程序到底是怎么实现的。一共六张图片，效果如下图所示。</p><p><img src="https://i.loli.net/2020/03/24/DSwIb4hQto6H5N3.png" alt=""></p><h4 id="4-数值计算"><a href="#4-数值计算" class="headerlink" title="4.数值计算"></a>4.数值计算</h4><p>我们之前说了为了表示色域，所有图像提取的参数都是0~255，那如果我们给所有参数原有基础上加上10呢，又或者我们的参数超过了255怎么办？图像的计算一样非常简单，如果超过了，计算机会自动模256，让其回到原来的区间。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数值计算</span></span><br><span class="line">img_cat=cv2.imread(<span class="string">'image/cat.jpg'</span>)</span><br><span class="line">img_car=cv2.imread(<span class="string">'image/car.png'</span>)</span><br><span class="line">img_cat2=img_cat+<span class="number">10</span></span><br><span class="line">img_sum=img_cat+img_cat2 <span class="comment"># 相当于%256</span></span><br><span class="line">img_sum2=cv2.add(img_cat,img_cat2)</span><br></pre></td></tr></table></figure><h4 id="5-图像融合"><a href="#5-图像融合" class="headerlink" title="5.图像融合"></a>5.图像融合</h4><p>相信对基于深度学习的cv感兴趣的伙伴，一定看过一个开源项目基于tensorflow的neural-style。对于简单的图像融合，我们有非常简单的命令。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 图像融合</span></span><br><span class="line"><span class="comment"># print(img_cat.shape,img_car.shape)</span></span><br><span class="line">img_car=cv2.resize(img_car,(<span class="number">500</span>,<span class="number">414</span>))</span><br><span class="line"><span class="comment"># img_car=cv2.resize(img_car,(0,0),fx=1,fy=3)</span></span><br><span class="line">res=cv2.addWeighted(img_cat,<span class="number">0.6</span>,img_car,<span class="number">0.4</span>,<span class="number">0</span>)</span><br><span class="line"><span class="comment"># cv_show('fusion',res)</span></span><br><span class="line">plt.imshow(res)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>但是需要注意的是，如果两张照片的尺寸不同，那显然他们像素矩阵是不能直接按权重相加的，这时候我们就需要resize的命令了，大可以动手操作一下以上程序，毕竟实践出真知。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、笔记整理&quot;&gt;&lt;a href=&quot;#一、笔记整理&quot; class=&quot;headerlink&quot; title=&quot;一、笔记整理&quot;&gt;&lt;/a&gt;一、笔记整理&lt;/h3&gt;&lt;p&gt;通过b站以及github的学习完成了本教程，讲解了图像处理的底层知识，本教程所有python代码将会放在我的
      
    
    </summary>
    
    
      <category term="计算机视觉与图像处理" scheme="http://yoursite.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E4%B8%8E%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="入门笔记整理" scheme="http://yoursite.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E4%B8%8E%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%E6%95%B4%E7%90%86/"/>
    
    
      <category term="图像处理" scheme="http://yoursite.com/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>电路模拟仿真软件icircuit使用指南</title>
    <link href="http://yoursite.com/2020/03/13/%E7%94%B5%E8%B7%AF%E6%A8%A1%E6%8B%9F%E4%BB%BF%E7%9C%9F%E8%BD%AF%E4%BB%B6icircuit%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://yoursite.com/2020/03/13/%E7%94%B5%E8%B7%AF%E6%A8%A1%E6%8B%9F%E4%BB%BF%E7%9C%9F%E8%BD%AF%E4%BB%B6icircuit%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</id>
    <published>2020-03-12T23:37:57.000Z</published>
    <updated>2020-03-14T13:16:42.404Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、为何选择icircuit？"><a href="#一、为何选择icircuit？" class="headerlink" title="一、为何选择icircuit？"></a>一、为何选择icircuit？</h3><p>这学期我们学校电院开始了《数字电路与逻辑设计》以及《模拟电子电路与技术基础》，这两门学科在电子领域地位和意义重大，想学好这两门课可不是很容易，他们相对于其他门学科而言，更加抽象。<a id="more"></a>个人觉得学习这两门课的最好方法就是实验，可是实验首先没有器材，其次实验的结果可能和你学的完全不一样。所以我把目标转向了仿真软件，我首先运用的就是射频电路分析的专业仿真软件multism。</p><p><img src="https://i.loli.net/2020/03/12/A4CxbX1JmvI9GFO.png" alt=""></p><p>但是复杂的界面以及冗长的操作手册有点让人忘而却步，虽然经过学习，multism也没有那么复杂，但它依然不够便捷，参数设置复杂，但其实我们课本并没有那么难，我只是想切切实实感受下电路的设置与构造。</p><p>(当然如果想要研究multism的同学，研究手册请到我网盘自己提取。链接：<a href="https://pan.baidu.com/s/179cNL4JUr9EVnwz51PS-cw" target="_blank" rel="noopener">https://pan.baidu.com/s/179cNL4JUr9EVnwz51PS-cw</a> 提取码：hlq7)</p><p><img src="https://i.loli.net/2020/03/12/7ValSIbuwyrgjOB.png" alt=""></p><p>于是我把研究的方向转到了ipad上的一款电路仿真软件——icircuit，这款软件几乎满足了我的所有需求，轻便，简洁，仿真结果迅速。美中不足的是，这款软件没有官方的教程文案，这让我倒弄了很久，但是研究一段时间之后，不得不赞叹这款软件的优秀表现。</p><p><img src="https://i.loli.net/2020/03/12/bQwkgxiXYIoA8HF.png" alt=""></p><h3 id="二、界面简介"><a href="#二、界面简介" class="headerlink" title="二、界面简介"></a>二、界面简介</h3><p>和大部分苹果app一样，它也是可以和其他云存储共享文件的，icloud，onedrive等等(当然这个文件共享和存储也没必要)，首先在最近项目中建立”电路.icircuit”文件，进入之后，就是我们设计电路并仿真的界面了。</p><p><img src="https://i.loli.net/2020/03/13/WMtbA5xk1TGJwqf.png" alt=""></p><p>界面分成几块区域，我们来单个介绍：</p><ul><li><ol><li>白色画板：<br>用来设计电路以及查看电路仿真的区域</li></ol></li><li><ol><li>加号添加器件：<br>点击下面蓝色的加号键，我们便能看到可以用的所有器件了，分了四个种类：来源，模拟，数字，硅。添加的方法十分方便，将器件拖入白色画板即可。</li></ol></li><li><ol><li>查看器件参数：<br>右边第三个按键，我们点击我们指定的电子器件，就可以在METER里面看到这个器件的所有参数了，包括电压电流以及其本身的性质等等。</li></ol></li><li><ol><li>可视化示波器：<br>右边第二个按键，波形图符号，大家可以再SCOPE面板中查看我们想要看到的电压电流特性波形。</li></ol></li></ul><h3 id="三、设计电路"><a href="#三、设计电路" class="headerlink" title="三、设计电路"></a>三、设计电路</h3><p>下面我们就要开始设计我们的电路了，这里我用我的作业来举例，比如老师让我们设计电路，使其实现相减器的功能，例如 $u_o=3u_{i1}-4u_{i2}$这样的电路关系。下面真的非常简单，相减器电路模型我就不说了，我来讲讲细节的操作。</p><h4 id="1-如何改变电子器件的方向"><a href="#1-如何改变电子器件的方向" class="headerlink" title="1. 如何改变电子器件的方向"></a>1. 如何改变电子器件的方向</h4><p>在我们设计电路的时候，往往为了直观，会把电阻或者电压弄成不一样的形状，当我们在icircuit中将器件拖入白板中时，默认方向为竖向，如果你想要调成横向时，得掌握一个技巧，以电阻为例，拖入白板之后，点击它使它变为蓝色，这时你会发现上下拖动和左右拖动，改变了它的长度以及纵向位置，并没有改变方向，这时我们就需要拖动电阻的某一端点，将其变为其他方向的电阻。其他电子器件同理。</p><p><img src="https://i.loli.net/2020/03/13/gVt82Q13jOBS9Rh.png" alt=""></p><h4 id="2-怎样改变电子器件的参数"><a href="#2-怎样改变电子器件的参数" class="headerlink" title="2. 怎样改变电子器件的参数"></a>2. 怎样改变电子器件的参数</h4><p>这其实是个简单的问题，比如交流电压源，单击触碰时可以将其删除，双击触碰便可以打开其参数面板。根据自己需求更改即可。</p><p><img src="https://i.loli.net/2020/03/13/M69yNd5vUqiPGmo.png" alt=""></p><h4 id="3-怎样连接各个电子器件"><a href="#3-怎样连接各个电子器件" class="headerlink" title="3. 怎样连接各个电子器件"></a>3. 怎样连接各个电子器件</h4><p>这个问题也是个非常简单的问题，你既可以拖动电子器件，改变它本身的长度(改变长度对参数没有任何影响)，也可以直接手画电力线，你不用触碰任何按钮，你只需要从一个电子器件的一端用手拖到另一端即可。反正总之连上去就行。如果在连接的过程，出现了短路或者反电路知识的情况，icircuit会给你报错。</p><p><img src="https://i.loli.net/2020/03/13/Xwnhb7SH1EQomdi.png" alt=""></p><h4 id="4-设计之后的电路图"><a href="#4-设计之后的电路图" class="headerlink" title="4. 设计之后的电路图"></a>4. 设计之后的电路图</h4><p>经过以上操作后，我相信实现一个简简单单的相减器，甚至更复杂的电路模型，都不是问题。如下图所示，这就是我设计的电路图，两个交流电压源，频率均为1Hz，振幅分别为2V和5V，同样我们可以使用参数面板来查看指定器件的参数。我们也可以看到黄色的小点在电路中流动，表示电路的可运行性。</p><p><img src="https://i.loli.net/2020/03/13/smg7Fw5Xrb6PWyj.png" alt=""></p><h3 id="四、仿真模拟"><a href="#四、仿真模拟" class="headerlink" title="四、仿真模拟"></a>四、仿真模拟</h3><p>下面要进行的就是最关键的步骤，仿真结果可视化输出，这也是当时让我琢磨了很久的部分。因为光用METER参数面板其实无法看出电压之间的关系，也就无法验证我们的结果。</p><h4 id="1-打开示波器，添加我们需要的参数"><a href="#1-打开示波器，添加我们需要的参数" class="headerlink" title="1. 打开示波器，添加我们需要的参数"></a>1. 打开示波器，添加我们需要的参数</h4><p>当我们设计完电路，打开示波器按钮时，懵了，啥也没有。</p><p><img src="https://i.loli.net/2020/03/14/EBO4QzNRLfT8S7t.png" alt=""></p><p>想一想当然也正常，设计完电路，软件也不知道你需要输出器件的波形啊。下面就是可视化的关键步骤了。<strong>添加我们需要的器件的参数</strong>，比如说这题目我们设计完电路，需要验证三个变量$u_o,u_{i1},u_{i2}$的电压是否满足电路关系，对应到电路图上来，也就是两个电压源以及一个电阻两端的电压，我们以最左边的交变电压源为例，我们需要输出它两端电压的波形图。点开METER面板，单击触碰它，使它变蓝，在METER参数面板中，我们就能看到他所有的参数，每个参数变量前，都有个小圆圈，我们这里需要电压，于是我们在符号Vd前面把圆圈点亮，这时我们便可以看到示波器里面，输出了交变电压两端的电压波形图了。</p><p><img src="https://i.loli.net/2020/03/14/EuY3SdL2pJ41i95.png" alt=""></p><p>在示波器中，我们可以看到电压的峰峰值，以及黄色标记，我们指定的交变电压源的周围也有一圈黄色光晕，代表它被选中且参数为黄色曲线。下面我们如法炮制，将另外两个参数也添加进入示波器中。</p><p><img src="https://i.loli.net/2020/03/14/K7BLcgxZtUesyVn.png" alt=""></p><h4 id="2-如何使波形图显示在同一个坐标系中"><a href="#2-如何使波形图显示在同一个坐标系中" class="headerlink" title="2. 如何使波形图显示在同一个坐标系中"></a>2. 如何使波形图显示在同一个坐标系中</h4><p>到上步之后，我们通过观察峰峰值，其实已经可以看出来了，我们设计的电路，满足了$u_o=3u_{i1}-4u_{i2}$这样的电路关系。但是输出的波形却是一模一样的，很难直观看出波形顶端差距，例如当我们可视化同相/反相比例放大器时，就是想直观看出波形的变化。</p><p><img src="https://i.loli.net/2020/03/14/lOCconmVpLeGbxI.png" alt=""></p><p>这个时候，我们点击示波器的 <strong>‘’$i$按钮’’</strong>，出现了示波器坐标系的调整面板，在这里面我们可以设置示波器的持续时间以及坐标系的最大最小幅值，如果我们需要将三个波形放到同一个坐标系下的话，点击堆叠按钮，取消堆叠，然后我们便得出了同一张坐标系下的三个波形图，更加直观。</p><p><img src="https://i.loli.net/2020/03/14/SaDogxhVXlA9POK.png" alt=""></p><h3 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h3><p>以上便是我整理的所有icircuit使用指南的内容了，icircuit肯定不止这些功能，我只选取了对于学习数电模电有用的功能进行整理介绍，模电学习十分抽象，如果大家能利用自己的课余时间，将书上的电路模型都仿真一遍，相信对大家的学习会有很大的帮助。</p><p><img src="https://i.loli.net/2020/03/14/yhDurnQ6c9oEN1Z.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、为何选择icircuit？&quot;&gt;&lt;a href=&quot;#一、为何选择icircuit？&quot; class=&quot;headerlink&quot; title=&quot;一、为何选择icircuit？&quot;&gt;&lt;/a&gt;一、为何选择icircuit？&lt;/h3&gt;&lt;p&gt;这学期我们学校电院开始了《数字电路与逻辑设计》以及《模拟电子电路与技术基础》，这两门学科在电子领域地位和意义重大，想学好这两门课可不是很容易，他们相对于其他门学科而言，更加抽象。
    
    </summary>
    
    
      <category term="实用工具" scheme="http://yoursite.com/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
      <category term="icircuit" scheme="http://yoursite.com/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/icircuit/"/>
    
    
      <category term="icircuit" scheme="http://yoursite.com/tags/icircuit/"/>
    
  </entry>
  
  <entry>
    <title>入门参与数学建模竞赛</title>
    <link href="http://yoursite.com/2020/02/13/%E5%85%A5%E9%97%A8%E5%8F%82%E4%B8%8E%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AB%9E%E8%B5%9B/"/>
    <id>http://yoursite.com/2020/02/13/%E5%85%A5%E9%97%A8%E5%8F%82%E4%B8%8E%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AB%9E%E8%B5%9B/</id>
    <published>2020-02-13T12:46:33.000Z</published>
    <updated>2020-03-08T14:17:07.556Z</updated>
    
    <content type="html"><![CDATA[<p>本来准备参加完美赛写的，但是现在由于疫情原因和其他论文原因一拖再拖。唉</p><script type="math/tex; mode=display">\begin{align}I&=\iiint\limits_{\Omega}(z^2+x^2+y^2)dV=\iiint\limits_{\Omega}r^2dV \\&=\int\limits_{0}^{2\pi}\int\limits_{0}^{\frac{\pi}{2}}\int\limits_{0}^{a}r^4\sin \varphi drd\varphi d\theta\\&= \frac{2}{5}\pi a^5\end{align}</script><p>测试latex公式渲染</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本来准备参加完美赛写的，但是现在由于疫情原因和其他论文原因一拖再拖。唉&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\begin{align}
I&amp;=\iiint\limits_{\Omega}(z^2+x^2+y^2)dV=\ii
      
    
    </summary>
    
    
      <category term="数学建模" scheme="http://yoursite.com/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
      <category term="入门指导" scheme="http://yoursite.com/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E5%85%A5%E9%97%A8%E6%8C%87%E5%AF%BC/"/>
    
    
      <category term="数学建模" scheme="http://yoursite.com/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>写在前面</title>
    <link href="http://yoursite.com/2020/02/13/%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2/"/>
    <id>http://yoursite.com/2020/02/13/%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2/</id>
    <published>2020-02-12T23:18:18.000Z</published>
    <updated>2020-03-07T08:19:41.389Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、聊聊OpenCV"><a href="#一、聊聊OpenCV" class="headerlink" title="一、聊聊OpenCV"></a>一、聊聊OpenCV</h3><p>计算机视觉应该是目前和自然语言处理一起在人工智能方向最火的领域，主要是因为这两个人工智能分支，是目前应用领域最广泛的。然而其实就目前时代而言，所有的人工智能研究生博士生都转向了这两个领域去研究，导致了公司岗位的过度饱和。但是实际情况是计算机视觉领域，工程师过剩，学术人才短缺。<a id="more"></a>我之前给大家推荐过一个学习线路：</p><ul><li>学习《机器学习》《深度学习》等内容。</li><li>认真研读几篇CV的paper。</li><li>了解CV方向的Alexnet，R-CNN，yolo系列等。</li><li>下载VOC，ImageNet，COCO，Kaggle开源数据集。</li><li>在github上准备几个CV的框架，例如pytorch，Tensorflow等，准备数据集来跑一下。</li></ul><p>做到以上几点，本科阶段那绝对都是高手了，大牛算不上，但是肯定比一般人要厉害了，但是如果说找工作岗位和未来更进一步，但肯定是不够的。因为以上内容其实很快就能学会了，我们真正要学会的，或者是难的东西永远是底层架构，不管是软件开发方向还是人工智能方向（<strong>当然也有工程师能特别厉害，充分利用资源等</strong>）。其实计算机视觉最底层的东西不是人工智能，而是图像处理，所以我认为计算机视觉要从图像处理开始学起，但是这些内容是更难啃的骨头，但是我相信如果坚持下来，之后的视觉学习会事半功倍。</p><h3 id="二、工具准备"><a href="#二、工具准备" class="headerlink" title="二、工具准备"></a>二、工具准备</h3><p>我来说说我目前的编译环境好了，其实ide方面我对于vscode一直情有独钟，基本靠他来写所有语言的代码，但是图像处理内容所用的Python库，很可惜在vscode上经常报错，查询了很多方法无法解决，于是我直接开始使用Anaconda，人家集成好的环境，更加方便，ide也改用了spyder。</p><h3 id="三、环境配置"><a href="#三、环境配置" class="headerlink" title="三、环境配置"></a>三、环境配置</h3><p>首先在官网上<a href="https://www.anaconda.com/download/" target="_blank" rel="noopener">https://www.anaconda.com/download/</a>下载anaconda环境配置包，大家下载安装全部默认即可。<br><strong>下载Anaconda不需要提前安装Python，安装了也没关系</strong></p><p>这时，电脑本地会多一个Anaconda3的文件夹，会有5个东西。<br><img src="https://i.loli.net/2020/02/12/pODNQ7M8itSGe1s.png" alt=""><br>我们需要来学习的有两个东西：<code>Anaconda Prompt</code> 和 <code>Spyder</code></p><blockquote><p>Anaconda Prompt就是相当于本地终端cmd，如果有Python基础的都知道，在安装Python库文件的时候我们通过使用终端的pip命令安装。<br>之前说了安装Anaconda不需要安装Python，但是如果安装了也要注意，这时候的你的电脑有两个环境，一个Python环境，一个Anaconda环境。<br>其中cmd的pip安装库是安装在了Python环境下，在Anaconda Prompt里面pip安装才在Anaconda环境下，换言之，在cmd里面使用pip install 的库，并不能在Anaconda下调用。<br>Spyder就是Anaconda自带的编译器，还是十分方便的。</p></blockquote><p>安装完Anaconda后，我们打开<code>Anaconda Prompt</code>，输入指令查看目录。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd Anaconda3  <span class="comment"># 进入Anaconda3文件夹，按照不用安装路径更改</span></span><br><span class="line">dir           <span class="comment"># 查看本目录下的配置文件</span></span><br><span class="line">python        <span class="comment"># 如果出现程序命令行状态，证明安装成功</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/02/13/gZw731GOUmsbQ8R.png" alt=""><br><img src="https://i.loli.net/2020/02/13/JcnFOe3DUoQjxfs.png" alt=""></p><p>然后我们进入Anaconda3目录下的Scripts文件夹，里面包含了Anaconda3的所有配置文件，然后我们查看下Anaconda给我们集成好的库文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd Scripts    <span class="comment"># 进入Scripts文件夹，查看配置文件</span></span><br><span class="line">pip list      <span class="comment"># 查看集成好的库文件</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/02/13/eCgGqT6uxkrOm8s.png" alt=""></p><p>下面我们来正式开始安装两个常用的CV库文件：<code>opencv-python</code>和<code>opencv-contrib-python</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install opencv-python</span><br><span class="line">pip install opencv-contrib-python</span><br></pre></td></tr></table></figure><p>然后验证下是否安装完成，进入Python环境。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line">cv2.__version__   <span class="comment"># 查看版本号</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/02/13/N7xHXjvCrazfO9y.png" alt=""></p><p>至此，CV的库文件安装成功，在Spyder IDE中大家就可以直接调用了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、聊聊OpenCV&quot;&gt;&lt;a href=&quot;#一、聊聊OpenCV&quot; class=&quot;headerlink&quot; title=&quot;一、聊聊OpenCV&quot;&gt;&lt;/a&gt;一、聊聊OpenCV&lt;/h3&gt;&lt;p&gt;计算机视觉应该是目前和自然语言处理一起在人工智能方向最火的领域，主要是因为这两个人工智能分支，是目前应用领域最广泛的。然而其实就目前时代而言，所有的人工智能研究生博士生都转向了这两个领域去研究，导致了公司岗位的过度饱和。但是实际情况是计算机视觉领域，工程师过剩，学术人才短缺。
    
    </summary>
    
    
      <category term="图像处理与计算机视觉" scheme="http://yoursite.com/categories/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E4%B8%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="入门笔记整理" scheme="http://yoursite.com/categories/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E4%B8%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%E6%95%B4%E7%90%86/"/>
    
    
      <category term="计算机视觉" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
  </entry>
  
  <entry>
    <title>编程与人工智能推荐书目以及学习路线</title>
    <link href="http://yoursite.com/2020/02/12/%E7%BC%96%E7%A8%8B%E4%B8%8E%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%8E%A8%E8%8D%90%E4%B9%A6%E7%9B%AE%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    <id>http://yoursite.com/2020/02/12/%E7%BC%96%E7%A8%8B%E4%B8%8E%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%8E%A8%E8%8D%90%E4%B9%A6%E7%9B%AE%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</id>
    <published>2020-02-11T22:12:21.000Z</published>
    <updated>2020-02-12T04:37:00.059Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、分享理由"><a href="#一、分享理由" class="headerlink" title="一、分享理由"></a>一、分享理由</h3><p>博主现在于西安电子科技大学读电子信息工程专业，这个专业在我们学校的研究方向为雷达天线这块嵌入式的内容，然而读大学以来其实我对于编程，软件开发以及人工智能方面的兴趣颇浓，甚于硬件部分。<a id="more"></a>所以考虑研究生转计算机研究方向，你要问我EE转CS是不是一种趋势，我只能说据我的了解，EE要比CS更加难读，在就业方面，CS近乎于饱和，EE就业竞争压力小，但是相反的EE夕阳产业也较多，但这并不算明显的劣势，主要还是我更对编程及数学方面感兴趣点，虽然EE的图像处理，模式识别和智能系统方向也是人工智能的分支，但我还是更喜欢软件的东西。去年我们学校西电发布的关于AI的论文在全国高校居第二位，仅次于清华，绝大部分都是图像处理方向的研究，我也参加了电子工程学院图像处理的实验室学习，之后也会分享学习内容。</p><p>说了这么多，作为研究生想转CS方向的本科生，我肯定是要学习CS的本科我们EE没学的知识，我们学校人工智能专业和我们专业本科学习科目基本相同，我也是课外看了一些书目，然后自己做了些整理。其实人工智能这方面更多靠的是兴趣来自学，比如cv这些方向内容，本科很少有这方面深入的课程，与EE大部分课程一样都是蜻蜓点水，只有读了研究生博士生和导师做项目锻炼实战的能力。下面主要来讲讲我的学习思路。</p><h3 id="二、编程语言类书籍"><a href="#二、编程语言类书籍" class="headerlink" title="二、编程语言类书籍"></a>二、编程语言类书籍</h3><h4 id="写在前面：“纸上得来终觉浅，绝知此事要躬行”-任何编程语言如果说光看书都只是个笑话，一定要动手实战训练才能到到看的效果，github上面有无数经典的实战项目可供我们上手练习。"><a href="#写在前面：“纸上得来终觉浅，绝知此事要躬行”-任何编程语言如果说光看书都只是个笑话，一定要动手实战训练才能到到看的效果，github上面有无数经典的实战项目可供我们上手练习。" class="headerlink" title="写在前面：“纸上得来终觉浅，绝知此事要躬行” 任何编程语言如果说光看书都只是个笑话，一定要动手实战训练才能到到看的效果，github上面有无数经典的实战项目可供我们上手练习。"></a><strong>写在前面：“纸上得来终觉浅，绝知此事要躬行” 任何编程语言如果说光看书都只是个笑话，一定要动手实战训练才能到到看的效果，github上面有无数经典的实战项目可供我们上手练习。</strong></h4><h4 id="1-C语言"><a href="#1-C语言" class="headerlink" title="1. C语言"></a>1. C语言</h4><p>作为大学的第一门编程语言，和我小学时候学的basic编程语言相似，对我而言上手还是轻松的，但是想深入的学习C语言的难点，比如指针，内存管理，谭浩强的教学书籍肯定是不够的，所以这里我推荐额外的三本书。</p><ul><li><p><strong>C语言程序设计现代方法</strong><br><img src="https://tse3-mm.cn.bing.net/th/id/OIP.lIHIbM-8IrjdoUtBuEYANAAAAA?w=132&h=176&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>这本书是我用来自学的书，个人感觉还不错，更加适合小白入门，内容通俗易懂。</p></li><li><p><strong>C Primer Plus</strong><br><img src="https://tse1-mm.cn.bing.net/th/id/OIP.oyCOuxWBzqHmptlXd9_MjwHaHa?w=201&h=201&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>经典中的经典，这个不用多说，应该是内容最全的C语言书籍了，但是内容并不是十分新手向，然而对于学习C语言中难的部分有重大的好处。</p></li><li><p><strong>C HOW TO PROGRAM</strong><br><img src="https://tse4-mm.cn.bing.net/th/id/OIP.iL8C_emJBwxaJxy7bBahHQHaJq?w=138&h=181&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>这本书现在也有中文版了，中文名为C语言大学教程，是学长推荐的书籍，这本书也是我最喜欢的一本，里面的代码以及风格非常吸引人，充分体现了编程语言之美的特点，书里还包括一些C语言高级的操作以及实战，个人非常喜欢。</p></li></ul><h4 id="2-C"><a href="#2-C" class="headerlink" title="2. C++"></a>2. C++</h4><p>C++在上大学前也接触过但是不多，停留在基础语法方面，在大一学C的过程中顺便学了C++，讲真学了C++再也不想用C编程了，特别是大二学习数据结构，用C写了几百行代码，内心哭着想明明C++一个库文件就能搞定了啊。除了硬件编程，使用汇编和C之外，C++应该是使用最广泛地语言了，不管是Python或者Matlab开发的底层库大部分都是基于C++的，学好C++比只学一门Python更重要。</p><ul><li><strong>C++ Primer Plus</strong><br><img src="https://tse2-mm.cn.bing.net/th/id/OIP.NchuvFN-tGgIBKpGK_fpJAAAAA?w=146&h=207&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>这本书也是经典中的经典，其实挺适合初学者的，还有一本书C++ Prime少个plus，个人觉得差别不是很大，基本上吃透这本书，C++就没啥问题了，更多的还是需要实战，C++比C更高级不光在语法还有各种库文件，灵活使用，C++将比C简洁许多。</li></ul><h4 id="3-Java"><a href="#3-Java" class="headerlink" title="3. Java"></a>3. Java</h4><p>Java也是我大一特别喜欢的一门语言，作为后端的老大，任何软件开发项目都需要Java来搭建网络框架，不做多的介绍，如果你的兴趣是软件开发研究，这就是必学的语言。</p><ul><li><strong>Java编程思想</strong><br><img src="https://tse3-mm.cn.bing.net/th/id/OIP.XgDm2k8XNgH8Z2Fk9iRVLgAAAA?w=139&h=196&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>这本书是java经典中的经典，作为后端老大，java更多的还是靠项目实战。</li></ul><h4 id="4-Python"><a href="#4-Python" class="headerlink" title="4. Python"></a>4. Python</h4><p>Python是近几年最火的编程语言，这是我大一下的一门课，Python方面我只推荐一本书，因为我觉得Python看书真的不是最重要的事情，Python编程讲究的是简洁以及快捷，配合它的各种库，它几乎是能做所有事情的工具。但是请注意，它是工具，配合上Python的库，它可以Excel分析，网络爬虫，人脸识别，机器学习深度学习，图像处理等等内容，在暑假我浏览Python底层文件库的时候，我竟然还发现Python也能写arduino单片机了，并且不管是前端后端，Python也可以参与开发工作。及至到此，你可能觉得学好了Python可以打遍天下了，但是必然不是，光学好Python反而在以后很不受待见，主要是Python门槛低见效高，各类培训机构更是抓住这样的机会大把捞钱，其实10几天成为Python工程师，也只是学会了调包。综上，Python可以作为你增值的最好工具，但是不能是你唯一的语言。</p><ul><li><strong>Python编程从入门到实践</strong><br><img src="https://tse2-mm.cn.bing.net/th/id/OIP.RoW031enRzgYeDbZaifGSQHaHa?w=182&h=180&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>这本书基本上就是我寒假入门的书，基于Python3，我觉得入门很好，语法讲全了也很透彻，后面还有关于一个做飞机游戏的实战，用到了matplotlib和pygame库，学习Python，语法和算法并不是最重要的，重要的是学习如何安装库，调用库，使用库来实现你的功能。</li></ul><h4 id="5-GoLang"><a href="#5-GoLang" class="headerlink" title="5. GoLang"></a>5. GoLang</h4><p>Go语言是我闲暇带着学的语言，它是新出来的一门语言，Go语言市面上没有啥经典的书，所以我只推荐一本书。</p><ul><li><strong>Go语言实战</strong><br><img src="https://tse3-mm.cn.bing.net/th/id/OIP.UM3pnGA88svvkQALU3I-RgAAAA?w=197&h=197&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>Go语言被设计成一门应用于搭载 Web 服务器，存储集群或类似用途的巨型中央服务器的系统编程语言。对于高性能分布式系统领域而言，Go 语言无疑比大多数其它语言有着更高的开发效率。它提供了海量并行的支持，这对于游戏服务端的开发而言是再好不过了。</li></ul><h4 id="写在最后：我只是兴趣才涉及了这5门语言，实际上没必要，看自己以后的研究方向，决定深入学习哪儿种语言。"><a href="#写在最后：我只是兴趣才涉及了这5门语言，实际上没必要，看自己以后的研究方向，决定深入学习哪儿种语言。" class="headerlink" title="写在最后：我只是兴趣才涉及了这5门语言，实际上没必要，看自己以后的研究方向，决定深入学习哪儿种语言。"></a><strong>写在最后：我只是兴趣才涉及了这5门语言，实际上没必要，看自己以后的研究方向，决定深入学习哪儿种语言。</strong></h4><h3 id="三、数据结构与算法类书籍"><a href="#三、数据结构与算法类书籍" class="headerlink" title="三、数据结构与算法类书籍"></a>三、数据结构与算法类书籍</h3><p>光学会语言肯定是不够的，语言是实现工具，要想真正使它起到重要作用，计算机数据结构和经典算法也必须掌握。</p><ul><li><p><strong>算法导论</strong><br><img src="https://tse1-mm.cn.bing.net/th/id/OIP.e1_aiovnGSX9QGjdXIiceAHaKD?w=139&h=189&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>“年轻人，来感受力量吧。”算法导论是算法中的经典书籍，但是需要深厚的数学功底，以及学习过数据结构的知识，才能感受到其中的力量。</p></li><li><p><strong>算法</strong><br><img src="https://tse1-mm.cn.bing.net/th/id/OIP.xzUf8h_as43rg9W74PlQYQAAAA?w=217&h=213&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>与算法导论那本书买错了，我当时看着算法导论，就哭了。算法第四版是我们学校计科专业的用书，这本书还是比算法导论友善很多的。</p></li><li><p><strong>数据结构</strong><br><img src="https://tse1-mm.cn.bing.net/th/id/OIP.JXZV2FgQ5DHpHs4fbHCQ5QAAAA?w=208&h=208&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>说实话这本书实在不适合初学者，我大一基本是面向csdn在看这本书，但是这本书对于学习所有数据结构内容又是经典，建议结合github上现成的数据结构代码来看。</p></li></ul><h3 id="四、计算机知识类书籍"><a href="#四、计算机知识类书籍" class="headerlink" title="四、计算机知识类书籍"></a>四、计算机知识类书籍</h3><p>非计算机科班出身想转CS的必读书目，简而言之，就是人家的本科知识，我也整理了些不在计算机大类基础中的书籍，这些内容是关于计算机底层以及系统类的知识。</p><h4 id="1-计算机网络类"><a href="#1-计算机网络类" class="headerlink" title="1. 计算机网络类"></a>1. 计算机网络类</h4><p>计算机网络是计算机知识中非常重要，但是十分枯燥的部分，我推荐三本书，一本轻松，两本硬核。</p><ul><li><p><strong>图解HTTP</strong><br><img src="https://tse1-mm.cn.bing.net/th/id/OIP.ZiS7EuKRoNJu2aZKigCcBQHaJ4?w=160&h=204&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>这本书是俱乐部推荐学习web端知识的，是我最喜欢的书，主要是生动形象，通俗易懂，建议web小白学习，非常有趣。</p></li><li><p><strong>TCP/IP详解</strong><br><img src="https://tse4-mm.cn.bing.net/th/id/OIP.VzusU2dkDc9Ntd6RjkJDAQAAAA?w=216&h=208&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>这本书是学习计算机网络特别经典的书籍，计算机网络狭义而言就是TCP/IP协议，但这本书比较晦涩难懂，需要基础知识。</p></li><li><p><strong>计算机网络 自顶向下的方法</strong><br><img src="https://tse2-mm.cn.bing.net/th/id/OIP.jefPCQYLnhgPTsRWDfpnSwD6D6?w=205&h=205&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>这本书比起上本书稍微好懂一点，但也只是稍微，计算机网络本身就是枯燥的东西，个人还是更推荐上一本。</p></li></ul><h4 id="2-Linux系统类"><a href="#2-Linux系统类" class="headerlink" title="2. Linux系统类"></a>2. Linux系统类</h4><p>Linux系统应该不用多说他的重要性了吧，基本上90%的项目都是在Linux开发的，所以学好Linux真的非常重要。我推荐两本经典的书。</p><ul><li><p><strong>鸟哥的Linux私房菜</strong><br><img src="https://tse2-mm.cn.bing.net/th/id/OIP.QQ9ADeGcN6sCfSmAFbZmAQAAAA?w=212&h=213&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>这本书包含了几乎所有Linux命令，我推荐作为工具书使用，但是务必要熟悉其内容。</p></li><li><p><strong>UNIX环境高级编程</strong><br><img src="https://tse3-mm.cn.bing.net/th/id/OIP.Y6wj4wINzpyuKDJGY7HHqQAAAA?w=145&h=202&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>上本书基本上是在说Linux环境的使用，而这本书就是关于在环境下编程开发的。</p></li></ul><h4 id="3-数据库类"><a href="#3-数据库类" class="headerlink" title="3. 数据库类"></a>3. 数据库类</h4><ul><li><strong>MySQL必知必会</strong><br><img src="https://tse2-mm.cn.bing.net/th/id/OIP.gX2nuq_9D7LzgBDEvEc_wgAAAA?w=159&h=160&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>数据库方面就推荐这一本书，毕竟这本书讲解的已经十分全面了，不做额外的推荐。</li></ul><h3 id="五、人工智能类书籍"><a href="#五、人工智能类书籍" class="headerlink" title="五、人工智能类书籍"></a>五、人工智能类书籍</h3><p>AI是最近几年火到爆的一个话题，至于有没有必要投身于，这个就智者见智仁者见仁了。我这里推荐的也只是入门级的经典书籍，其实人工智能大部分方向都是纯数学类，真正需要计算机编程的，是应用实践与产品落地。首先，看以下的书我们需要有些数学的准备知识。</p><blockquote><p>统计学<br>线性代数</p></blockquote><p>以上两个内容我不做推荐的，但是统计学和线性代数加在一起，几乎就是整个机器学习的知识，所以还是非常重要的。</p><h4 id="1-人工智能简介类"><a href="#1-人工智能简介类" class="headerlink" title="1. 人工智能简介类"></a>1. 人工智能简介类</h4><ul><li><strong>人工智能</strong><br><img src="https://tse3-mm.cn.bing.net/th/id/OIP.oilZ7dR4jCecof11jNkaXwAAAA?w=185&h=180&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>这里推荐下李开复教授的书籍，对于想学人工智能的同学可以先了解了解。</li></ul><h4 id="2-机器学习类"><a href="#2-机器学习类" class="headerlink" title="2. 机器学习类"></a>2. 机器学习类</h4><p>机器学习是人工智能最基础的部分，其实看过机器学习的内容后，还是会发现机器学习基本都是数学类的内容，再具体一点，就是统计学，所以数学真的非常重要。</p><ul><li><p><strong>机器学习</strong><br><img src="https://tse1-mm.cn.bing.net/th/id/OIP.eaoccMazmKDdfUylonVQDAAAAA?w=175&h=205&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>这本书包含了几乎所有著名的机器学习模型，详细讲解其原理，缺点是没有代码，不过把它作为入门类书籍还是可以的，另外大家也可以结合吴恩达的课程一起学习。</p></li><li><p><strong>Scikit-Learn与TensorFlow机器学习实用指南</strong><br><img src="https://tse3-mm.cn.bing.net/th/id/OIP.OJhiUZi0-LetLWUPbIyboAAAAA?w=126&h=166&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>Amazon销售量第一，这本书就是关于机器学习的实战部分内容了，源码已经在github上开源了。</p></li></ul><h4 id="3-深度学习类"><a href="#3-深度学习类" class="headerlink" title="3. 深度学习类"></a>3. 深度学习类</h4><p>深度学习和神经网络的知识大家其实可以一起学习，没必要再分细致，了解其数学背景才是关键的事情。</p><ul><li><p><strong>深度学习</strong><br><img src="https://tse1-mm.cn.bing.net/th/id/OIP.-LzszgWLjsZrbL3hMkYrRQHaJ9?w=144&h=193&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>花书，圣经，深度学习经典材料，厚度感人，十分经典不做过多的介绍，反正学习路上绕不开这本书。</p></li><li><p><strong>Deep Learning with Python</strong><br><img src="https://tse3-mm.cn.bing.net/th/id/OIP.Gs2KxopjWL5fSlSpMYGKigAAAA?w=129&h=161&c=7&o=5&dpr=1.5&pid=1.7" alt=""><br>这本书真的很适合小白入门，用的工具是Keras，作为TensorFlow的high level API，不那么复杂的Python编程，所有较为容易的上手实践项目，这本书好像没有中文版的，但是真的很有意思，另外这本书缺点就是不够深入，几乎没有数学公式和原理，当然这也是他不复杂的原因。</p></li></ul><h3 id="六、学习路线"><a href="#六、学习路线" class="headerlink" title="六、学习路线"></a>六、学习路线</h3><p>推荐了这么多，我来讲讲学习路线，以上的书我也不可能全部看完的，但是这些书在学生时代看看，有利无弊。以下是我整理的方向。</p><h4 id="1-软件开发方向"><a href="#1-软件开发方向" class="headerlink" title="1. 软件开发方向"></a>1. 软件开发方向</h4><ul><li>编程语言类书籍选择C++，Python，Java作为主要语言来看。</li><li>计算机网络类的书那是必须要掌握的。</li><li>接下来就可以再细分了，软件开发还分前端，后端，全栈。大家可以先去了解这些方向，再选择用书，比如后端可以选择最近很火的Spring框架的书来看，这里不做详细推荐。</li></ul><h4 id="2-人工智能方向"><a href="#2-人工智能方向" class="headerlink" title="2. 人工智能方向"></a>2. 人工智能方向</h4><ul><li>编程语言类书籍选择C++，Python作为主要语言。</li><li>计算机网络最好了解。</li><li>人工智能类必看。</li><li>结合吴恩达的机器学习和深度学习的课程。</li><li>阅读人工智能方向的paper，了解典型的，例如cv方向的Alexnet，R-CNN，yolo系列等。</li><li>下载VOC，ImageNet，COCO，Kaggle开源数据集。</li><li>了解人工智能基本模型框架，例如pytorch，Tensorflow等，准备数据集来跑一下。</li></ul><hr><p><strong>我觉得以上内容作为本科学习绝对足够了，我也不知道我以后具体会研究什么方向，所以趁学生时代，还是先读书吧。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、分享理由&quot;&gt;&lt;a href=&quot;#一、分享理由&quot; class=&quot;headerlink&quot; title=&quot;一、分享理由&quot;&gt;&lt;/a&gt;一、分享理由&lt;/h3&gt;&lt;p&gt;博主现在于西安电子科技大学读电子信息工程专业，这个专业在我们学校的研究方向为雷达天线这块嵌入式的内容，然而读大学以来其实我对于编程，软件开发以及人工智能方面的兴趣颇浓，甚于硬件部分。
    
    </summary>
    
    
      <category term="经验分享" scheme="http://yoursite.com/categories/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="经验分享" scheme="http://yoursite.com/tags/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>Matlab安装教程</title>
    <link href="http://yoursite.com/2020/02/12/Matlab%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/02/12/Matlab%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</id>
    <published>2020-02-11T21:11:42.000Z</published>
    <updated>2020-02-12T04:37:22.268Z</updated>
    
    <content type="html"><![CDATA[<h4 id="以下教程仅适用于win10环境，安装以Matlab-2017b为例"><a href="#以下教程仅适用于win10环境，安装以Matlab-2017b为例" class="headerlink" title="以下教程仅适用于win10环境，安装以Matlab 2017b为例"></a>以下教程仅适用于win10环境，安装以Matlab 2017b为例</h4><h3 id="一、Matlab的作用"><a href="#一、Matlab的作用" class="headerlink" title="一、Matlab的作用"></a>一、Matlab的作用</h3><p>因为博主本科在校期间参与数学建模竞赛，并作为编程队员，Matlab是必须掌握的编程语言。在数学建模竞赛中，Matlab主要发挥的作用包括数学计算，模型求解以及可视化图形绘制。<a id="more"></a>其实除此之外，Matlab更是所有工科专业所必须的模型仿真以及参数调制的软件，它几乎能实现问题的求解，包括电磁场分解，神经网络，视屏图像处理等等功能。今天我们来详细讲解Matlab的安装。</p><h3 id="二、软件准备"><a href="#二、软件准备" class="headerlink" title="二、软件准备"></a>二、软件准备</h3><p>本文采取种子下载的方式，较安全。<br>Torrent种子下载器的百度网盘链接：</p><blockquote><p>链接：<a href="https://pan.baidu.com/s/1O0rRAlQM6nfsQTxsaNgxOg" target="_blank" rel="noopener">https://pan.baidu.com/s/1O0rRAlQM6nfsQTxsaNgxOg</a><br>提取码：0ubq</p></blockquote><p>Matlab2018b种子文件(持续更新)</p><blockquote><p>链接：<a href="https://pan.baidu.com/s/1uTsnFpCbfc5Te5gX2LFCsQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1uTsnFpCbfc5Te5gX2LFCsQ</a><br>提取码：ed74</p></blockquote><p>下载解压后，将种子放进Torrent下载器中下载后，本地上有三个文件。<br><img src="https://images2018.cnblogs.com/blog/1377919/201806/1377919-20180606212719529-257398164.png" alt=""><br>两个光盘安装文件，一个破解文件。</p><h3 id="三、正式安装"><a href="#三、正式安装" class="headerlink" title="三、正式安装"></a>三、正式安装</h3><ol><li>点击dvd1的exe文件。</li><li>选择<code>使用文件安装秘钥</code>，点击<code>下一步</code>。<br><img src="https://images2018.cnblogs.com/blog/1377919/201806/1377919-20180606212746326-843939953.png" alt=""></li><li>允许用户协议，选择<code>是</code>，点击<code>下一步</code>。<br><img src="https://images2018.cnblogs.com/blog/1377919/201806/1377919-20180606212812111-1863935724.png" alt=""></li><li>选择<code>我已有我的许可证的文件安装秘钥</code>，输入序列号<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">09806</span><span class="number">-07443</span><span class="number">-53955</span><span class="number">-64350</span><span class="number">-21751</span><span class="number">-41297</span></span><br></pre></td></tr></table></figure><img src="https://images2018.cnblogs.com/blog/1377919/201806/1377919-20180606212917786-104551208.png" alt=""></li><li>接下来按照默认即可，点击安装，等待安装完成。<br><img src="https://images2018.cnblogs.com/blog/1377919/201806/1377919-20180606213247371-1135438213.jpg" alt=""></li><li>安装到一半会出现下面情况，点击确定。<br><img src="https://images2018.cnblogs.com/blog/1377919/201806/1377919-20180606213300771-502055264.png" alt=""></li><li>我们到此电脑目录下，弹出DVD1，并继续安装dvd2的文件即可，到此安装文件进度条可到100%。<strong>安装完成</strong></li></ol><h3 id="四、软件破解"><a href="#四、软件破解" class="headerlink" title="四、软件破解"></a>四、软件破解</h3><ol><li>解压破解文件夹，打开破解文件夹的<code>R2017b</code>，将破解的补丁文件<code>bin</code>复制到安装目录<code>/MATLAB/R2017b/</code>下覆盖原文件。<br><img src="https://images2018.cnblogs.com/blog/1377919/201806/1377919-20180606213336258-1057227094.png" alt=""></li><li>将破解文件夹下的<code>license_server.lic</code>和<code>license_standalone.lic</code>复制到安装目录<code>/MATLAB/R2017b/licenses</code>下覆盖原文件。<br><img src="https://images2018.cnblogs.com/blog/1377919/201806/1377919-20180606213404125-168800029.png" alt=""></li></ol><h3 id="五、软件激活"><a href="#五、软件激活" class="headerlink" title="五、软件激活"></a>五、软件激活</h3><ol><li>点击<code>/bin/win64/</code>里面的<code>active_matlab</code>,进行激活。<br><img src="https://images2018.cnblogs.com/blog/1377919/201806/1377919-20180606213424537-1031916014.png" alt=""></li><li>选择<code>在不使用Internet的情况下手动激活</code>。<br><img src="https://images2018.cnblogs.com/blog/1377919/201806/1377919-20180606213501889-548808556.png" alt=""></li><li>然后在<code>输入许可文件的完整安装路径</code>的选项下选择文件<code>license_standalone.lic</code>。<br><img src="https://images2018.cnblogs.com/blog/1377919/201806/1377919-20180606213537839-972029521.png" alt=""></li><li>点击<code>下一步</code>，激活完成。</li></ol><h3 id="六、Matlab推荐材料"><a href="#六、Matlab推荐材料" class="headerlink" title="六、Matlab推荐材料"></a>六、Matlab推荐材料</h3><ol><li>视屏教学材料，台大的郭彦甫老师授课，讲解清晰透彻，适合刚入门的小白学习，14讲内容，看完理解之后，基本内容就没有问题了，考虑到国内无法观看youtube平台的视屏，所以我选择了b站上别的up主搬运的视屏。<a href="https://www.bilibili.com/video/av68228488?from=search&amp;seid=10223858992775987688" target="_blank" rel="noopener">https://www.bilibili.com/video/av68228488?from=search&amp;seid=10223858992775987688</a></li><li>MATLAB2018从入门到精通，关于matlab的知识十分全面，可以与视屏配套使用。<br><img src="https://tse3-mm.cn.bing.net/th/id/OIP.q_AHtHnA6emmUEbVW7CSlAAAAA?w=188&h=188&c=7&o=5&dpr=1.5&pid=1.7" alt=""></li><li>MATLAB智能算法30个案例分析，这里面有许多高级的算法，遗传算法，蚁群算法，退火算法，可以作为进阶教材学习。<br><img src="https://tse4-mm.cn.bing.net/th/id/OIP.2vHN_wwhiwgI4uYi5x2APQAAAA?w=202&h=202&c=7&o=5&dpr=1.5&pid=1.7" alt=""></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;以下教程仅适用于win10环境，安装以Matlab-2017b为例&quot;&gt;&lt;a href=&quot;#以下教程仅适用于win10环境，安装以Matlab-2017b为例&quot; class=&quot;headerlink&quot; title=&quot;以下教程仅适用于win10环境，安装以Matlab 2017b为例&quot;&gt;&lt;/a&gt;以下教程仅适用于win10环境，安装以Matlab 2017b为例&lt;/h4&gt;&lt;h3 id=&quot;一、Matlab的作用&quot;&gt;&lt;a href=&quot;#一、Matlab的作用&quot; class=&quot;headerlink&quot; title=&quot;一、Matlab的作用&quot;&gt;&lt;/a&gt;一、Matlab的作用&lt;/h3&gt;&lt;p&gt;因为博主本科在校期间参与数学建模竞赛，并作为编程队员，Matlab是必须掌握的编程语言。在数学建模竞赛中，Matlab主要发挥的作用包括数学计算，模型求解以及可视化图形绘制。
    
    </summary>
    
    
      <category term="实用工具" scheme="http://yoursite.com/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
      <category term="Matlab" scheme="http://yoursite.com/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/Matlab/"/>
    
    
      <category term="Matlab" scheme="http://yoursite.com/tags/Matlab/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客搭建教程</title>
    <link href="http://yoursite.com/2020/02/11/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/02/11/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</id>
    <published>2020-02-10T18:27:23.000Z</published>
    <updated>2020-02-11T12:55:49.305Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、-hexo博客的作用"><a href="#一、-hexo博客的作用" class="headerlink" title="一、 hexo博客的作用"></a>一、 hexo博客的作用</h3><p>博客就像一个人公开的日记一般，可以记录很多包括生活学习在内的诸多事情，作为IT的学生，拥有一个属于自己的博客，也将是未来校招或研究生面试重要的加分项。</p><a id="more"></a><h3 id="二、-教程内容"><a href="#二、-教程内容" class="headerlink" title="二、 教程内容"></a>二、 教程内容</h3><p>本文将带你从0开始，根据以下5个内容，搭建属于自己的hexo博客。</p><ul><li><ol><li>部署环境</li></ol></li><li><ol start="2"><li>初始化个人博客</li></ol></li><li><ol start="3"><li>markdown写博客</li></ol></li><li><ol start="4"><li>通过github把博客部署到远端</li></ol></li><li><ol start="5"><li>设置博客主题</li></ol></li></ul><h3 id="三、-博客搭建"><a href="#三、-博客搭建" class="headerlink" title="三、 博客搭建"></a>三、 博客搭建</h3><h4 id="1-软件准备"><a href="#1-软件准备" class="headerlink" title="1. 软件准备"></a>1. 软件准备</h4><blockquote><p>node.js<br>git工具</p></blockquote><p>首先需要下载<code>nodejs</code>，我们可以去<a href="https://nodejs.org/" target="_blank" rel="noopener">https://nodejs.org/</a>下载<br><img src="https://i.loli.net/2020/02/11/EuDAUeitgs1L3jm.png" alt="nodejis"><br>下载完按照其默认安装即可。<br>下载安装完之后，本地就有了两个组件：<code>nodejs</code>和<code>npm</code>。</p><p>下面我们下载git工具，直接在官网上下载即可。<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a><br>和nodejs一样根据他的提示下载安装。<br>安装完成后，本地将会有三个东西：<code>Git Gui</code> <code>Git cmd</code> <code>Git Bash</code><br>我们打开<code>Git Bash</code>输入以下指令，来设置自己的用户名和邮箱</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="keyword">global</span> user.name <span class="string">"nameVal"</span>   <span class="comment"># 全局配置自己的用户名</span></span><br><span class="line">git config --<span class="keyword">global</span> user.email <span class="string">"emailVal"</span> <span class="comment"># 全局配置自己的邮箱</span></span><br></pre></td></tr></table></figure><p>配置完之后我们可以确认下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list  <span class="comment"># 查看git配置信息</span></span><br></pre></td></tr></table></figure><p>以上便是hexo博客搭建的软件准备了，下面我们开始部署环境。</p><h4 id="2-环境部署"><a href="#2-环境部署" class="headerlink" title="2. 环境部署"></a>2. 环境部署</h4><p>打开电脑终端<code>cmd</code>，在<code>shell</code>中输入命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">node -v <span class="comment"># 查看nodejs版本</span></span><br><span class="line">npm -v  <span class="comment"># 查看npm版本</span></span><br><span class="line">``` </span><br><span class="line">查看无误后，下面开始在终端输入命令，安装hexo博客框架。</span><br><span class="line">由于国内`npm`安装速度问题，我们可以通过淘宝镜像换成`cnpm`</span><br><span class="line">``` python</span><br><span class="line">npm install -g cnpm --registry=https://registry.taobao.org</span><br><span class="line"><span class="comment"># 安装完成之后可以查看版本来验证安装成功</span></span><br><span class="line">cnpm -v</span><br></pre></td></tr></table></figure><p>这样<code>cnpm</code>安装完成，接下来安装hexo。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br><span class="line"><span class="comment"># 安装完成后同样查看下版本</span></span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>以上便是hexo博客的环境部署，非常方便。</p><h4 id="3-初始化个人博客"><a href="#3-初始化个人博客" class="headerlink" title="3. 初始化个人博客"></a>3. 初始化个人博客</h4><p>下面我们在<code>cmd</code>的默认路径下<code>C:\Users\nameVal&gt;</code>下新建一个文件夹，名为blog(名字当然随便取)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir blog</span><br></pre></td></tr></table></figure><p>然后我们在本地就能看到一个新的文件夹blog，我们的所有配置都在此文件夹下面。<br>然后我们在<code>cmd</code>中进入blog这个目录下面</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd blog</span><br></pre></td></tr></table></figure><p>下面开始初始化博客</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init  <span class="comment"># 需要一些时间等待</span></span><br></pre></td></tr></table></figure><p>经过等待之后，博客已经搭建完成。大家可以进入blog文件夹查看生成的配置文件。然后我们启动博客预览。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s <span class="comment"># hexo s==hexo server意思是启动本地服务器</span></span><br></pre></td></tr></table></figure><p>然后我们在本地服务器中输入<code>cmd</code>中提示的4000端口就可以看到自己的博客了。<br><img src="https://i.loli.net/2020/02/11/ms53VpJQgfMWRcO.png" alt=""><br><code>hexo s</code>一般是在本地作为博客预览的一个命令。</p><h4 id="4-markdown写博客"><a href="#4-markdown写博客" class="headerlink" title="4. markdown写博客"></a>4. markdown写博客</h4><p>下面我们就要开始在我们的hexo博客下写博客了。我们首先需要创建一篇新的博客，在blog目录下输入命令。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n <span class="string">"我的第一篇博客"</span>  <span class="comment"># 引号内写博客的标题</span></span><br></pre></td></tr></table></figure><p>然后在<code>blog/source/_posts/</code>的目录下就能找到我们创建的第一篇博客的markdown文件。<br>markdown格式是程序员常用写博客的方式，markdown的语法十分简单。<br>给大家markdown的菜鸟教程<a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noopener">https://www.runoob.com/markdown/md-tutorial.html</a><br>基本上里面的语法就能解决常用的问题了，如果有里面没有的，要善用搜索引擎。<br>完成博客内容后，我们首先要在本地预览此篇博客的内容，写完之后打开<code>cmd</code>终端，在blog目录下输入两个命令。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g <span class="comment"># hexo g==hexo generate生成博客</span></span><br><span class="line">hexo s <span class="comment"># 在本地服务器上启动</span></span><br></pre></td></tr></table></figure><p>这是我们刷新本地服务器地址，就能看到我们的博客了。</p><h4 id="5-通过github把博客部署到远端"><a href="#5-通过github把博客部署到远端" class="headerlink" title="5. 通过github把博客部署到远端"></a>5. 通过github把博客部署到远端</h4><p><code>local:4000</code>作为我们本地的测试端，但是我们的博客内容不可能仅仅在本地用，所以我们需要把它部署到远端去。<br>github是一种非常稳定的方式，以后我们只要通过github的方式来访问我们的博客就可以了，而且此方法免费。<br><strong>当然大家也可以购买阿里云服务器，为自己的博客地址更改域名，这就看个人需求了</strong><br>ps：如果你还没有github账号，请赶紧注册<a href="https://www.github.com/" target="_blank" rel="noopener">https://www.github.com/</a>，这可是程序员乃至所有工科生必备神器，以及最大的同性交友网站gayhub(滑稽)。<br>下面打开自己的github，我们首先新建一个仓库(new repository)。<br><img src="https://i.loli.net/2020/02/11/5SoyteL4BYb3pnR.png" alt=""><br>用户部署个人博客的github仓库的命名必须要与你的用户名一致才行。如下图所示，因为我的博客已经部署好了，所以它会提示已存在。<br><img src="https://i.loli.net/2020/02/11/QMuhEzAomG4lc2S.png" alt=""><br>然后按照默认的点击<code>create repository</code>就行了。这现在是个空仓库，这是我们部署的博客地址<a href="https://Alpha-Yang.github.io" target="_blank" rel="noopener">https://Alpha-Yang.github.io</a><br><img src="https://i.loli.net/2020/02/11/mikay2LEFxNPHvd.png" alt=""><br>下面我们先不管它，打开终端命令行<code>cmd</code>下载git插件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save hexo deployer-git</span><br></pre></td></tr></table></figure><p>然后我们需要设置其配置文件，在<code>blog/</code>目录下找到配置文件<code>_config.yml</code>，用notepad或vim等记事本工具将其打开，更改该文件底部Deployment的内容。<br><img src="https://i.loli.net/2020/02/11/bNcDdlqYVOIJ5gL.png" alt=""><br>最后一步，我们将博客部署到远端，打开<code>cmd</code>终端。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d <span class="comment"># hexo d=hexo deployer部署到远端</span></span><br></pre></td></tr></table></figure><p>这时候输入你的github账号及密码(<strong>这里注意你的密码不会显示出来，所以输入即可</strong>)<br>这时候你会发现的仓库多了很多东西，然后把我们的仓库名拿出来访问，即<a href="https://alpha-yang.github.io" target="_blank" rel="noopener">https://alpha-yang.github.io</a><br>就能看到我们的博客被部署到github上了，这样的话博客的部署工作也就完成了。所以我们今后使用hexo的命令基本为五个，这里我做下整理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo n <span class="string">"博客名"</span>   <span class="comment"># 新建一篇博客</span></span><br><span class="line">hexo g           <span class="comment"># 博客内容生成</span></span><br><span class="line">hexo s           <span class="comment"># 启动本地服务器，预览更改后的博客</span></span><br><span class="line">hexo d           <span class="comment"># 将更改后的博客部署到远端</span></span><br><span class="line">hexo clean       <span class="comment"># 在hexo g之前的文件清理，不是必要。</span></span><br></pre></td></tr></table></figure><p>以上就完成了所有的博客搭建的内容教程，这时候你就有了属于你自己的博客了。</p><h3 id="四、-设置博客主题"><a href="#四、-设置博客主题" class="headerlink" title="四、 设置博客主题"></a>四、 设置博客主题</h3><p>hexo博客的默认主题为landscape，我们可以自由地更换主题，大家可以去github上广泛地搜索，下面我们来讲解下如何更换主题。</p><h4 id="1-博客主题下载"><a href="#1-博客主题下载" class="headerlink" title="1. 博客主题下载"></a>1. 博客主题下载</h4><p>在hexo博客中有好多主题被广泛使用，这里我推荐我使用的两款主题</p><blockquote><p>next(目前正在使用)<br>yimlia</p></blockquote><p>两款主题的下载地址分别为</p><blockquote><p><a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a><br><a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">https://github.com/litten/hexo-theme-yilia</a></p></blockquote><p>可以现在github上预览看下自己喜欢的主题。<br>我们下面来下载主题，打开<code>cmd</code>终端，在blog目录下输入命令。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next.git themes/next</span><br></pre></td></tr></table></figure><p>克隆完之后，在<code>blog/themes/</code>的目录下就有next文件夹了。</p><h4 id="2-将主题导入自己的博客"><a href="#2-将主题导入自己的博客" class="headerlink" title="2. 将主题导入自己的博客"></a>2. 将主题导入自己的博客</h4><p>打开blog目录下的配置文件<code>_config.yml</code>，更改theme的内容<br><img src="https://i.loli.net/2020/02/11/Umzn6IaltJZPXi7.png" alt=""><br>这样主题就导入成功了，接下来生成新内容，并部署到远端就可以了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>就可以在我们的网址上看到新的主题了。<br><strong>有可能出现尚未生效的情况，大家多刷新或等待就可以了，这是正常情况</strong></p><h4 id="3-常用更改"><a href="#3-常用更改" class="headerlink" title="3. 常用更改"></a>3. 常用更改</h4><p>最后的最后，我们需要学会更改配置文件的内容，根据自己的喜好优化博客即可，比如更改名字背景或添加特效等等。</p><p>第一个是<code>blog/</code>目录下的<code>_config.yml</code>配置文件<br><img src="https://i.loli.net/2020/02/11/238yAmoSVrMPkHj.png" alt=""><br>我们可以设置博客标题，副标题，描述，昵称，语言以及时区等等。</p><p>第二个是<code>blog/themes/next/</code>目录下的<code>_config.yml</code>配置文件<br>其实next主题还有四种样式可以选择，我选择的是Gemini样式<br><img src="https://i.loli.net/2020/02/11/ko1bgBWGqX89QlJ.png" alt=""><br>大家想要哪儿个样式，就在配置文件中取消注释就可以了。</p><h3 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h3><p>以上所有内容便是hexo博客搭建的所有内容了。除了hexo以外，当然还有其他很多博客的框架，选择hexo的原因是应用比较广泛，可讨论的地方比较多。当然大家搭建博客还是先玩起来，至于其他的之后再考虑。<br>关于博客的其他细节内容，大家一定要善用搜索引擎，我也会考虑写一篇hexo next主题优化的博客内容，供大家参考。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、-hexo博客的作用&quot;&gt;&lt;a href=&quot;#一、-hexo博客的作用&quot; class=&quot;headerlink&quot; title=&quot;一、 hexo博客的作用&quot;&gt;&lt;/a&gt;一、 hexo博客的作用&lt;/h3&gt;&lt;p&gt;博客就像一个人公开的日记一般，可以记录很多包括生活学习在内的诸多事情，作为IT的学生，拥有一个属于自己的博客，也将是未来校招或研究生面试重要的加分项。&lt;/p&gt;
    
    </summary>
    
    
      <category term="实用工具" scheme="http://yoursite.com/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
      <category term="hexo" scheme="http://yoursite.com/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
